事务 隔离问题
脏读 一个事务读到另一个事务没有提交的数据
不可重复读 一个事务读到另一个事务已提交的数据 update
虚读

隔离级别
read uncommitted 读未提交
read committed 读已提交
repeatable read 可重复读
serializable

平台事务管理器 PlatformManager
事务详情   TransactionDefinition  确定 隔离级别 是否只读 超时等
事务状态   TransactionStatus  保存点 事务是否完成

      tx包
      平台事务管理器 PlatformTransactionManager spring管理事务 必须使用事务管理器
            DataSourceTransactionManager  jdbc开发事务时 jdbcTemplate
            HibernateTransactionManager   Hibernate

      事务详情   TransactionDefinition  确定 隔离级别 是否只读 超时等 进行事务配置时，必须配置详情
      事务状态   TransactionStatus  保存点 事务是否完成
      实现类  jdbc包和orm包



      getTransaction(TransactionDefinition definition)  获得事务状态
      commit(TransactionStatus status)
      rollback(TransactionStatus status)

      事务传播行为  required / requires_new / nested
      required 默认值 必须   A如果有事务 B使用该事务  如果A没有事务 B创建新事务
      supported            A如果有事务 B使用该事务  如果A没有事务 B也没有事务
      mandatory 强制        A如果有事务 B使用该事务  如果A没有事务 B将抛异常
      requires_new         A如果有事务 将挂起 B创建一个新事务 如果A没有事务 B创建一个新事务
      not_supported 不支持  永远以非事务执行 存在的事务将会被挂起
                           A如果有事务将挂起 B以非事务执行
      never         不     不支持当前事务，有事务抛异常
                           如果A有事务 将抛异常 如果A没有事务 将以非事务执行
      nested        嵌套    A和B底层采用保存点机制，形成嵌套事务


  手动管理事务
  TransactionTemplate
   1. service 获得  配置模板并注入给service
   2. 模板需要输入事务管理器   配置

   DataSourceTransactionManager   需要注入DataSource

   半自动
   管理事务的代理工厂bean TransactionProxyFactoryBean
   1 getBean() 获得代理对象
   2 配置一个代理

   aop代理 基于xml
   1 配置管理器
   2 配置事务详情
   3 配置AOP

   aop代理 基于注解
   目标类 加注解 @Transactional   类或者方法